<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Task>
		<Title>Event Logs - Retain - {{{log_name}}} - Windows</Title>
		<Description><![CDATA[&lt;enter a description of the task here&gt; ]]></Description>
		<Relevance>windows of operating system</Relevance>
		<Relevance>not exists (it as integer) whose(it = 1) of values "AutoBackupLogFiles" of keys "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Eventlog\{{{log_name}}}" of registries</Relevance>
		<Category></Category>
		<DownloadSize>815660</DownloadSize>
		<Source>BigFix</Source>
		<SourceID>jgstew</SourceID>
		<SourceReleaseDate>2020-03-19</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Thu, 19 Mar 2020 23:09:53 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy this action.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[
{{{prefetch}}}

// Add LGPO.zip to the client utility cache
utility __Download\LGPO.zip


action uses wow64 redirection false

delete __createfile
createfile until _END_OF_FILE_
' zipExtract.vbs
' Written by James Stewart ( @jgstew )
' Public Domain - use at your own risk

' Dim to declare variables isn't required in VBScript except to make them available across all procedures within the script
Dim strZipFilePath, objOutputFolder, objCurrentFolder, objFSO, objShell

Set objFSO = CreateObject("Scripting.FileSystemObject")
Set objShell = CreateObject( "Shell.Application" )

' http://blogs.technet.com/b/heyscriptingguy/archive/2006/04/05/how-can-i-determine-the-path-to-the-folder-where-a-script-is-running.aspx
' http://stackoverflow.com/questions/4200028/vbscript-list-all-pdf-files-in-folder-and-subfolders
Set objCurrentFolder = objFSO.GetFolder( CreateObject("Wscript.Shell").CurrentDirectory )

' https://technet.microsoft.com/en-us/library/ee156618.aspx
If 1 = WScript.Arguments.Unnamed.Count Then
	strZipFilePath = WScript.Arguments.Unnamed.Item(0)
Else
	' operating on an ZIP in the current folder ( if there are multiple, the first one will be used )
	For Each objFile in objCurrentFolder.Files
		If UCase( objFSO.GetExtensionName(objFile.name)) = "ZIP" Then
			strZipFilePath = objFile.Path

			' https://blogs.technet.microsoft.com/heyscriptingguy/2005/05/04/how-can-i-exit-a-for-each-loop/
			Exit For
		End If
	Next

	If IsEmpty( strZipFilePath ) Then
		Wscript.Echo
		Wscript.Echo "-ERROR-"
		Wscript.Echo "  Usage: zipGetFilesList.vbs ""PATH\TO\FILE.ZIP""  [/OutDir:OutputDirectoryPath]"
		Wscript.Quit
	End If
End If

' output zip file path (debugging)
'Wscript.Echo strZipFilePath

' http://stackoverflow.com/questions/4100506/check-if-an-object-exists-in-vbscript
'If WScript.Arguments.Named.Count = 1 Then
If NOT IsEmpty( WScript.Arguments.Named.Item("OutDir") ) Then
	objOutputFolder = objFSO.GetAbsolutePathName( WScript.Arguments.Named.Item("OutDir") )
Else
	objOutputFolder = objCurrentFolder
End If

' TODO: Check to make sure output directory exists!
' TODO: Check to make sure the ZIP file exists!  (particularly if specified as parameter)

'  Extract the Files:
' https://asmand.wordpress.com/2015/06/15/unzip-with-vbscript/
' https://www.symantec.com/connect/forums/vbscript-extract-zip
objShell.NameSpace( objOutputFolder ).copyHere ( objShell.NameSpace( objFSO.GetAbsolutePathName( strZipFilePath ) ).Items() ), 1044
' https://msdn.microsoft.com/en-us/library/windows/desktop/bb787866(v=vs.85).aspx
_END_OF_FILE_

delete __Download\zipExtract.vbs
copy __createfile __Download\zipExtract.vbs

// need to switch directories to __Download so that zipExtract will find the zip file within the current folder
wait CMD /C cd __Download && cscript //nologo zipExtract.vbs

delete __createfile
createfile until _END_OF_FILE_
; ----------------------------------------------------------------------

Computer
Software\Policies\Microsoft\Windows\EventLog\{{{log_name}}}
AutoBackupLogFiles
SZ:1

; ----------------------------------------------------------------------
_END_OF_FILE_

delete __Download\registry.pol.txt
copy __createfile __Download\registry.pol.txt

waithidden __Download\LGPO.exe /t __Download\registry.pol.txt
continue if {exit code of action = 0}
]]></ActionScript>
			<SuccessCriteria Option="OriginalRelevance"></SuccessCriteria>
		</DefaultAction>
	</Task>
</BES>
